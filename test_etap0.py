# test_etap0.py
# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≠—Ç–∞–ø–∞ 0

from app.modules.database import models
from app.config.feature_flags import FeatureFlags, is_timing_enabled

def test_models_import():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –Ω–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥–µ–ª–µ–π...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–æ–≤—ã–µ –∫–ª–∞—Å—Å—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        assert hasattr(models, 'ActiveTimer')
        assert hasattr(models, 'ResearchGroup') 
        assert hasattr(models, 'GroupParticipant')
        assert hasattr(models, 'GroupEvent')
        
        print("‚úÖ –í—Å–µ –Ω–æ–≤—ã–µ –º–æ–¥–µ–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False

def test_feature_flags():
    """–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã feature flags"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ feature flags...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
        assert not FeatureFlags.ENABLE_AI_IMPORTANCE_ANALYSIS
        assert FeatureFlags.ENABLE_NEW_DB_FIELDS
        assert not is_timing_enabled()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –≤–∫–ª—é—á–µ–Ω–∏–µ
        FeatureFlags.enable_feature('ENABLE_DELAYED_MESSAGES')
        assert FeatureFlags.ENABLE_DELAYED_MESSAGES
        assert is_timing_enabled()
        
        print("‚úÖ Feature flags —Ä–∞–±–æ—Ç–∞—é—Ç")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ feature flags: {e}")
        return False

def test_utc_function():
    """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ utc_now"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ utc_now...")
    
    try:
        from app.modules.database.models import utc_now
        import datetime
        
        now = utc_now()
        assert isinstance(now, datetime.datetime)
        assert now.tzinfo is not None  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ timezone-aware
        
        print("‚úÖ utc_now —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ utc_now: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –≠–¢–ê–ü–ê 0")
    print("=" * 50)
    
    tests = [
        test_models_import,
        test_feature_flags, 
        test_utc_function
    ]
    
    passed = 0
    for test in tests:
        if test():
            passed += 1
    
    print("=" * 50)
    print(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢: {passed}/{len(tests)} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏")
    
    if passed == len(tests):
        print("üéâ –≠–¢–ê–ü 0 –ì–û–¢–û–í! –ú–æ–∂–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ –°–ø—Ä–∏–Ω—Ç—É 1!")
    else:
        print("‚ö†Ô∏è  –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å")
