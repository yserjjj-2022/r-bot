# app/modules/timing_primitives/dynamic_pause.py
# –í–ï–†–°–ò–Ø 2.0 (30.10.2025): –ü–æ–ª–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –ø–∞—É–∑—ã —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º

import time
import threading

class DynamicPause:
    """
    –ü—Ä–∏–º–∏—Ç–∏–≤ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –ø–∞—É–∑—ã.
    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ä–µ–∂–∏–º—ã:
    - silent: –ø—Ä–æ—Å—Ç–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –±–µ–∑ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
    - progressbar: –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä 5 —à–∞–≥–æ–≤ —Å –ø–æ–¥–ø–∏—Å—å—é
    """
    def __init__(self, bot, chat_id: int, duration: float, fill_type: str = 'silent', message_text: str = "–û–±—Ä–∞–±–æ—Ç–∫–∞..."):
        self.bot = bot
        self.chat_id = chat_id
        self.duration = float(duration or 0)
        self.fill_type = (fill_type or 'silent').lower()
        self.message_text = message_text or "–û–±—Ä–∞–±–æ—Ç–∫–∞..."
        self._on_complete = None

    def execute(self, on_complete_callback: callable):
        """–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–∞—É–∑—É. –ù–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫."""
        self._on_complete = on_complete_callback
        t = threading.Thread(target=self._run, daemon=True)
        t.start()

    # --- internal ---
    def _run(self):
        try:
            if self.fill_type == 'progressbar':
                self._run_progress_bar()
            else:
                self._run_silent()
        finally:
            try:
                if callable(self._on_complete):
                    self._on_complete()
            except Exception:
                pass

    def _run_silent(self):
        time.sleep(self.duration)

    def _run_progress_bar(self):
        if not self.bot or not self.chat_id:
            time.sleep(self.duration)
            return
        
        # –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            msg = self.bot.send_message(self.chat_id, f"‚è≥ {self.message_text}\n‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è 0%")
        except Exception:
            time.sleep(self.duration)
            return

        steps = 5
        step_duration = max(self.duration / steps, 0.05)
        for i in range(1, steps + 1):
            time.sleep(step_duration)
            percent = int(i * 100 / steps)
            filled = "üü©" * i
            empty = "‚¨úÔ∏è" * (steps - i)
            try:
                self.bot.edit_message_text(chat_id=self.chat_id, message_id=msg.message_id,
                                           text=f"‚è≥ {self.message_text}\n{filled}{empty} {percent}%")
            except Exception:
                # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ)
                pass
        
        # –§–∏–Ω–∞–ª—å–Ω–∞—è —Ñ–∏–∫—Å–∞—Ü–∏—è –∏ –º—è–≥–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
        try:
            self.bot.edit_message_text(chat_id=self.chat_id, message_id=msg.message_id,
                                       text=f"‚úÖ {self.message_text}")
            time.sleep(1.0)
            self.bot.delete_message(self.chat_id, msg.message_id)
        except Exception:
            pass